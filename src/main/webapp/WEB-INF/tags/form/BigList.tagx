<jsp:root xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions"
	xmlns:util="urn:jsptagdir:/WEB-INF/tags/util"
	xmlns:form="http://www.springframework.org/tags/form"
	xmlns:jsp="http://java.sun.com/JSP/Page"
	xmlns:spring="http://www.springframework.org/tags" version="2.0">
	<jsp:output omit-xml-declaration="yes" />
	<meta charset="utf-8" />
<meta http-equiv="pragma" content="no-cache"/>
<meta http-equiv="cache-control" content="no-cache" />
<meta http-equiv="cache-control" content="no-store" />
<meta http-equiv="expires" content="Thu, 01 Jun 1970 00:00:00 GMT" />
<meta http-equiv="Access-Control-Allow-Origin" content="*"/>  
	<spring:url value="/resources/js/printer/epos-2.3.0.js" var="epson_core" />
	<script type="text/javascript" src="${epson_core}" ><!-- required for FF3 and Opera --></script>
	
	<spring:url value="/resources/js/printer/CustomerDisplayDevice.js" var="epson_device" />
	<script type="text/javascript" src="${epson_device}" ><!-- required for FF3 and Opera --></script>


	<jsp:directive.attribute name="id" type="java.lang.String"
		required="true" rtexprvalue="true"
		description="The identifier for this tag (do not change!)" />
	<jsp:directive.attribute name="items" type="java.util.Collection"
		required="true" rtexprvalue="true"
		description="The form backing object name" />
	<jsp:directive.attribute name="label" type="java.lang.String"
		required="false" rtexprvalue="true"
		description="The label used for this object, will default to a message bundle if not supplied" />
	<jsp:directive.attribute name="mainOrderID" type="java.lang.Long"
		required="true" rtexprvalue="true"
		description="The id of MainOrder, it will be used to delete the whole order." />
	<jsp:directive.attribute name="labelPlural" type="java.lang.String"
		required="false" rtexprvalue="true"
		description="The label used for this object, will default to a message bundle if not supplied" />
	<jsp:directive.attribute name="render" type="java.lang.Boolean"
		required="false" rtexprvalue="true"
		description="Indicate if the contents of this tag and all enclosed tags should be rendered (default 'true')" />
	<jsp:directive.attribute name="openPane" type="java.lang.Boolean"
		required="false" rtexprvalue="true"
		description="Control if the title pane is opened or closed by default (default: true)" />

	<c:if test="${empty render or render}">
		<div class="gallery" style="padding: 20px; background:#${background_subpage}">
			<c:if test="${empty label}">
				<spring:message
					code="label_${fn:toLowerCase(fn:substringAfter(id,'_'))}"
					var="label" htmlEscape="false" />
			</c:if>
			<c:if test="${empty labelPlural}">
				<spring:message
					code="label_${fn:toLowerCase(fn:substringAfter(id,'_'))}_plural"
					var="labelPlural" htmlEscape="false" />
			</c:if>
			<div id="printAreaForReceip">
				<legend>${label}</legend>
				<c:choose>
					<c:when test="${not empty items}">
						<jsp:doBody />
					</c:when>
					<c:otherwise>
						<spring:message arguments="${label}" code="entity_not_found" />
						<jsp:doBody />
					</c:otherwise>
				</c:choose>
			</div>
			
			<c:if test="${user_role == '[ROLE_EMPLOYEE]' || user_role == '[ROLE_MANAGER]'}">
				<spring:url value="/resources/images/back.png" var="back_img_url" />
				<img alt="Back" src="${back_img_url}" title="Back to main order page." onclick="javascript:backToMainOrder()" style="cursor:pointer"/>
				 | 
				<spring:url value="/resources/images/print.png" var="print_img_url" />
				<img alt="Print" src="${print_img_url}" title="Send the order to printer." onclick="javascript:printMainOrder('${mainOrderID}', '${wsUri}')" style="cursor:pointer"/>
				 | 
				<spring:url value="/resources/images/money.png" var="money_img_url" />
				<img alt="Served" src="${money_img_url}" title="Ready for receve money." onclick="javascript:orderCompleted('${mainOrderID}')" style="cursor:pointer"/>
				 | 
				<spring:url value="/resources/images/clean.png" var="clean_img_url" />
				<img alt="Merge" src="${clean_img_url}" title="Clean the order from the list" onclick="javascript:cleanAnOrder('${mainOrderID}')" style="cursor:pointer"/>
				<!-- input id="OrderCleaned" type="submit" class="btn btn-primary" onclick="javascript:closeAnOrder('${mainOrderID}')" value="Close" /-->
			</c:if>
		</div>
		
		<c:if test="${user_role != '[ROLE_PRINTER]'}">
		<script type="text/javascript">
		
		function backToMainOrder() {
			window.location = "../dashboard";
		}
		
		function MyHashMap(){
		     var size = 0;
		     var entry = new Object();
		     this.put = function (key , value){
		         if(!this.containsKey(key)){
		             size ++ ;
		         }
		         entry[key] = value;
		     }
		     this.get = function (key){
		         if( this.containsKey(key)){
		             return entry[key];
		         }else{
		             return null;
		         }
		     }
		     this.remove = function ( key ){
		         if( delete entry[key] ){
		             size --;
		         }
		     }
		     this.containsKey = function ( key ){
		         return (key in entry);
		     }
		     this.containsValue = function ( value ){
		         for(var prop in entry){
		             if(entry[prop] == value){
		                 return true;
		             }
		         }
		         return false;
		     }
		     this.values = function (){
		         var values = new Array(size);
		         for(var prop in entry){
		             values.push(entry[prop]);
		         }
		         return values;
		     }
		     this.keys = function (){
		         var keys = new Array(size);
		         for(var prop in entry){
		             keys.push(prop);
		         }
		         return keys;
		     }
		     this.size = function (){
		         return size;
		     }
		 }
		
		function printMainOrder(mainOrderID, wsUri) {
			var Printerlist = "${printersMap}";
			var printsMap = new MyHashMap();
			<c:forEach items = "${printersMap}" var = "item">  
				printsMap.put("${item.key}", "${item.value}");
				//<c:out value="${item.key}"/>  
				//<c:out value="${item.value}"/>  
			</c:forEach>  
			
			var Printerlist="${printers}";
			<c:forEach var="i" begin="1" end="${fn:length(printers)}" step="1">
				<c:if test="${not empty materialsForPrinters[i-1]}">
					var printerIpAddress ="${printers[i-1]}";
					var printType=printsMap.get("${printers[i-1]}");
				    var builder = new epson.ePOSBuilder();
		            builder.addTextLang('en');
		            builder.addTextSmooth(true);
		            builder.addTextFont(builder.FONT_A);
					if(printType=== 'togo'){
						 builder.addTextSize(1, 1);	
				         builder.addText("Table Number " + "${sizeTable}" + "     "+"Order Time "+"${targetTime}"+'\n');
				         builder.addText("------------------------------------------"+'\n');
				         builder.addTextSize(2, 2);
						<c:forEach var="j" begin="1" end="${fn:length(materialsForPrinters [i-1])}" step="1">	
					        builder.addTextAlign(builder.ALIGN_LEFT);
							builder.addText("${materialsForPrinters [i-1][j-1]['portionName']}"+'\n')
							builder.addTextAlign(builder.ALIGN_RIGHT);
							builder.addText("${materialsForPrinters [i-1][j-1]['remark']}"+'\n')
					    </c:forEach>	
						builder.addTextSize(1, 1);	
						builder.addTextAlign(builder.ALIGN_LEFT);
						builder.addText("------------------------------------------"+'\n');
					    builder.addText("${address}" +'\n');
					    builder.addText("${contactPhone}"+'\n');
					    builder.addText("Total:"+"${total}"+" Tax:"+"${tax}"+" = $"+"${final}"+'\n');
					    builder.addCut(builder.CUT_FEED);
					    var request = builder.toString();
			            var address = 'http://'+printerIpAddress+'/cgi-bin/epos/service.cgi?devid=local_printer&amp;timeout=10000';     
			            // Create an ePOS-Print object
			            var epos = new epson.ePOSPrint(address);
			            //Send the print document						           
			            epos.send(request);
					}else if(printType=== 'all'){
						builder.addTextSize(1, 1);	
						builder.addText("Table Number " + "${sizeTable}" + "  "+"Order Time"+"${targetTime}"+'\n');
				        builder.addText("------------------------------------------"+'\n');
				        builder.addTextSize(2, 2);
						<c:forEach var="j" begin="1" end="${fn:length(materialsForPrinters [i-1])}" step="1">
						    builder.addTextAlign(builder.ALIGN_LEFT);
							builder.addText("${materialsForPrinters [i-1][j-1]['portionName']}"+'\n')
							builder.addTextAlign(builder.ALIGN_RIGHT);
							builder.addText("${materialsForPrinters [i-1][j-1]['remark']}"+'\n')
					    </c:forEach>	
						builder.addCut(builder.CUT_FEED);
						var request = builder.toString();
				        var address = 'http://'+printerIpAddress+'/cgi-bin/epos/service.cgi?devid=local_printer&amp;timeout=10000';     
				        // Create an ePOS-Print object
				        var epos = new epson.ePOSPrint(address);
				        //Send the print document						           
				        epos.send(request);
					}else if(printType=== 'separate'){
						<c:forEach var="j" begin="1" end="${fn:length(materialsForPrinters [i-1])}" step="1">	
							builder.addTextSize(1, 1);		
							builder.addTextAlign(builder.ALIGN_LEFT);
							builder.addText("Table Number " + "${sizeTable}" + "  "+"Order Time"+"${targetTime}"+'\n');
							builder.addText("------------------------------------------"+'\n');
						    builder.addTextSize(2, 2);
						    builder.addTextAlign(builder.ALIGN_LEFT);
							builder.addText("${materialsForPrinters [i-1][j-1]['portionName']}"+'\n')
							builder.addTextAlign(builder.ALIGN_RIGHT);
							builder.addText("${materialsForPrinters [i-1][j-1]['remark']}"+'\n')
							builder.addCut(builder.CUT_FEED);
						</c:forEach>	
						var request = builder.toString();
			            var address = 'http://'+printerIpAddress+'/cgi-bin/epos/service.cgi?devid=local_printer&amp;timeout=10000';     
			            // Create an ePOS-Print object
			            var epos = new epson.ePOSPrint(address);
			            //Send the print document						           
			            epos.send(request);
					}
				</c:if>
			</c:forEach>
			
			var confirmed = confirm("Are you sure to send it to printer?");
			if(confirmed){
				$.ajax({
			    	headers: "Accept=application/json",
			        type: "POST",
			        url: "updateAnOrderStatus/"+mainOrderID,
			        data: "recordStatus=10",
			        async:false,
			        success:function(textContent){
			        	if(textContent == null || textContent.length == 0){
			        	}else{
			        		alert( "Please check the connection of internet or cotact the admin.");
			        	}
			        	window.location = "../dashboard";
			        }
			    });
			}
		}
		
		function orderCompleted(mainOrderID) {
			var confirmed = confirm("Are you sure all served?");
			if(confirmed){
				$.ajax({
			    	headers: "Accept=application/json",
			        type: "POST",
			        url: "updateAnOrderStatus/"+mainOrderID,
			        data: "recordStatus=50",
			        async:false,
			        success:function(textContent){
			        	if(textContent == null || textContent.length == 0){
			        	}else{
			        		alert( "Please check the connection of internet or cotact the admin.");
			        	}
			        	window.location = "../dashboard";
			        }
		    	});
			}
		}
		
		function cleanAnOrder(mainOrderID) {
			var confirmed = confirm("Are you sure to remove it?");
			if(confirmed){
				$.ajax({
			    	headers: "Accept=application/json",
			        type: "POST",
			        url: "updateAnOrderStatus/"+mainOrderID,
			        data: "recordStatus=-1",
			        async:false,
			        success:function(textContent){
			        	if(textContent == null || textContent.length == 0){
			        	}else{
			        		alert( "Please check the connection of internet or cotact the admin.");
			        	}
			        	window.location = "../dashboard";
			        }
			    });
			}
		}
		
		</script>
		</c:if>
	</c:if>
</jsp:root>